{"version":3,"file":"static/css/main.8710ab25.css","mappings":"AAAA,KAII,mBAFA,aACA,uBAMA,iBAGJ,KAmBI,sDAEA,8EAHA,sEAEA,0EANA,yBATA,6BACA,6BAIA,2BANA,qBAiBA,CAOJ,mCACI,GACI,wBAGJ,GACI,8BANR,2BACI,GACI,wBAGJ,GACI,8BC3CR,QAII,yBAGA,mBACA,qFASA,oBApBmB,CAyBnB,6CArBA,aAiBA,YACA,SAGA,CAEA,eACI,aAOA,SANA,aAGA,iBAGA,CAGJ,kBAcI,yBAGA,mBACA,6GAWA,oBAlEmB,CAsEnB,6BAtBA,SAsBA,CAGJ,gCAhCI,SACA,OAHA,kBACA,KAsDA,CArBJ,cAqBI,kCAXA,mBAQA,WATA,aAMA,mEAFA,kBACA,gBAHA,uBALA,OAeA,CAGJ,oBAKI,yBAGA,mBACA,iGAUA,oBApHmB,CAuHnB,mCArBA,SACA,YAoBA,CCxHR,gBAUI,mBAIA,yBACA,yBACA,yBACA,yBAGA,mBACA,yDAjBA,SAKA,aAEA,uBANA,OAHA,eAIA,QAHA,MAyBA,aAGA,2BACI,UACA,eCnBR,MAgBI,gGAXA,YAjBQ,CAcR,kBAWA,gEATA,WAYA,CAGA,2EAyBI,gCAJA,mBALA,4FAQA,WALA,aAIA,oBADA,eAbA,YAxCI,CAmDJ,uBARA,WANA,kBAEA,WAiBA,CAQJ,aACI,sBAOJ,YAEI,sBADA,iEACA,CAMJ,YACI,sBACA,wIAOJ,aACI,sBACA,sIAOJ,WACI,uBACA,wIAOJ,cACI,sBACA,0IAQR,uCACI,GACI,oGAGJ,GACI,6FANR,+BACI,GACI,oGAGJ,GACI,6FAKR,qCACI,GACI,UAGJ,GACI,YANR,6BACI,GACI,UAGJ,GACI,YCnIR,KAEI,oIADA,QACA","sources":["components/App/App.scss","components/Loader/Loader.scss","components/LoadingScreen/LoadingScreen.scss","components/Cube/Cube.scss","index.scss"],"sourcesContent":[".App {\n    // center all elements inside in the center of viewport\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    // set 100% view height, full view port height\n    // content inside will be center in the middle of\n    // screen both vertically and horizontally\n    min-height: 100vh;\n}\n\nbody {\n    // show background image to cover whole screen\n    // and to see whole image properly\n    //background-image: url(\"../../../public/background.svg\");\n    background-size: cover;\n    background-position-x: center;\n    background-position-y: bottom;\n\n    // repeat image on x axis, because it will\n    // animate through horizontal moving\n    background-repeat: repeat-x;\n\n    // uncomment background-image when it's ready\n    // and then remove background-color\n    background-color: #7d6848;\n\n    // do animation of background image on x axis\n    // to do objects moving\n    animation-name: move-background;\n    animation-duration: 10s;\n    animation-timing-function: linear;\n    animation-iteration-count: infinite;\n}\n\n// move background image on x axis horizontally\n// to show effect of constantly moving\n// move to the 100% viewport width (full width\n// or the screen)\n@keyframes move-background {\n    0% {\n        background-position-x: 0;\n    }\n\n    100% {\n        background-position-x: -100vw;\n    }\n}\n","$border-radius-loader: 1.4rem;\n$border-radius-background: $border-radius-loader - 0.2rem;\n\n.loader {\n    display: flex;\n\n    // flat color as fallback\n    background-color: #fdcb42;\n\n    // set gradient color with fallback background\n    background: rgb(194, 116, 36);\n    background: linear-gradient(\n        0deg,\n        rgba(194, 116, 36, 1) 0%,\n        rgba(192, 110, 21, 1) 32%,\n        rgba(237, 150, 19, 1) 65%,\n        rgba(253, 169, 25, 1) 81%,\n        rgba(254, 203, 69, 1) 100%\n    );\n\n    border-radius: $border-radius-loader;\n    height: 3rem;\n    width: 80%;\n\n    // add small shadow\n    box-shadow: 0px 5px 3px 1px #484848bd;\n\n    &__inner {\n        display: flex;\n        margin: 0.5rem;\n\n        // positioning container for inner childs\n        position: relative;\n\n        // spread flex item to the full width\n        flex: 1;\n    }\n\n    &__progress {\n        // align progress to the left\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n\n        // calculate progress bar by distance from the right side\n        // subtract full width (100%) with actual percentage\n        // to get level of progress bar in percentages\n        // right = 0% for full width, right = 100% for empty progress\n        right: 100% - 76%;\n\n        // flat color as fallback\n        background-color: #9bdd42;\n\n        // set gradient color with fallback background\n        background: rgb(63, 119, 33);\n        background: linear-gradient(\n            0deg,\n            rgba(63, 119, 33, 1) 0%,\n            rgba(53, 130, 35, 1) 26%,\n            rgba(115, 196, 47, 1) 51%,\n            rgba(176, 230, 89, 1) 69%,\n            rgba(218, 243, 146, 1) 81%,\n            rgba(202, 233, 132, 1) 91%,\n            rgba(94, 218, 96, 1) 100%\n        );\n\n        border-radius: $border-radius-background;\n\n        // add small shadow to the outside, reversed\n        // to the background inset\n        box-shadow: 0px 0px 3px 0px #09451b;\n    }\n\n    &__text {\n        // center text by absolute positioning\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n\n        // center text inside box on both axis\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        font-size: 1.45rem;\n        font-weight: bold;\n        font-family: \"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\",\n            sans-serif;\n\n        color: white;\n\n        // add borders with given color around each text letter\n        -webkit-text-stroke: 1.1px #22712a;\n    }\n\n    &__background {\n        flex: 1;\n        margin: 0.1rem;\n\n        // flat color as fallback\n        background-color: #a77336;\n\n        // set gradient color with fallback background\n        background: rgb(155, 103, 43);\n        background: linear-gradient(\n            0deg,\n            rgb(112 74 30) 0%,\n            rgb(154 105 49) 32%,\n            rgb(176, 122, 60) 51%,\n            rgb(170, 117, 55) 69%,\n            rgb(159, 107, 48) 81%,\n            rgb(122 74 26) 100%\n        );\n\n        border-radius: $border-radius-background;\n\n        // add small shadow to the inside with inset\n        box-shadow: inset 0px 0px 5px 0px #3c3c3c;\n    }\n}\n",".loading-screen {\n    // spread screen wrapper around whole screen and fix it\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    // center loader on the screen both vertically and horizontally\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    // different background colors and fallbacks\n    background-color: #282c34;\n    background-color: #626262;\n    background-color: #4a487d;\n    background-color: #7d6848;\n\n    // background gradient for effect\n    background: rgb(125, 104, 72);\n    background: radial-gradient(\n        circle,\n        rgba(125, 104, 72, 1) 0%,\n        rgba(74, 72, 125, 1) 90%\n    );\n\n    // use high stacking content\n    z-index: 1000;\n\n    // fade away effect with zero opacity and small transition\n    &__fade-away {\n        opacity: 0;\n        transition: 0.6s;\n    }\n}\n","@use \"sass:math\";\n\n$cube-size: 17rem;\n$cube-size-half: math.div($cube-size, 2);\n$rotation-side: 90deg;\n\n$animation-time: 2.5s;\n\n// 3d axis are used as mathematical descartes system\n// x axis is horizontally, y axis is vertically and\n// z axis is in front of screen (orthogonal to the screen)\n// (0, 0) (x, y) is on the screen top left corner (different\n// from mathematics where (0, 0) is on bottom left corner\n\n.cube {\n    // all cube sides are relative to the cube\n    position: relative;\n\n    width: $cube-size;\n    height: $cube-size;\n\n    // all children elements (sides of cube) are positioned\n    // in 3d space with given preserving\n    // otherwise, if flag is used, then all child elements\n    // are lying on 2d space, on the cube wrapper plane itself\n    // when using 3d preserving then sides of cube can be\n    // transformed in 3d space using standard css transformations\n    transform-style: preserve-3d;\n\n    // animate cube rotation and fade in at the same time\n    animation: cube-rotate-fade-in 1 $animation-time linear;\n\n    // set cube as group of squares\n    &__front,\n    &__back,\n    &__left,\n    &__right,\n    &__top,\n    &__bottom {\n        position: absolute;\n\n        width: $cube-size;\n        height: $cube-size;\n\n        // set half visible sides to see through them while rotating\n        opacity: 0.5;\n\n        // animate cube sides with opacity to show sides slowly\n        // use the same timing as cube rotation animation\n        animation: cube-side-opacity 1 $animation-time linear;\n\n        // remove it when implementing each side of cube\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-size: 3rem;\n        font-family: cursive;\n        color: white;\n        -webkit-text-stroke: 1px #987c7c;\n    }\n\n    // front side stays where it is, it's leading side\n    // no transformation at all is needed\n    // front is lying on the cube wrapper side\n    // other sides are rotating and translating\n    // around front side\n    &__front {\n        background-color: blue;\n    }\n\n    // move back side to the \"back\" by moving backwards\n    // to the z axis (far from the screen)\n    // move side backwards by full cube size to allow\n    // other sides to lay on it\n    &__back {\n        transform: translateZ(-$cube-size);\n        background-color: yellow;\n    }\n\n    // move left side to the \"left\" by rotating on y axis\n    // vertically and then moving left on the x axis horizontally\n    // also move element on z axis to lay on other sides\n    &__left {\n        background-color: black;\n        transform: rotateY($rotation-side) translateX($cube-size-half)\n            translateZ(-$cube-size-half);\n    }\n\n    // move left side to the \"right\" by rotating on y axis\n    // vertically and then moving right on the x axis horizontally\n    // also move element on z axis to lay on other sides\n    &__right {\n        background-color: white;\n        transform: rotateY($rotation-side) translateX($cube-size-half)\n            translateZ($cube-size-half);\n    }\n\n    // move top side to the \"top\" by rotating on x axis\n    // horizontally and then moving up on the y axis vertically\n    // also move element on z axis to lay on the back side\n    &__top {\n        background-color: green;\n        transform: rotateX($rotation-side) translateY(-$cube-size-half)\n            translateZ($cube-size-half);\n    }\n\n    // move bottom side to the \"bottom\" by rotating on x axis\n    // horizontally and then moving down on the y axis vertically\n    // also move element on z axis to lay on the back side\n    &__bottom {\n        background-color: aqua;\n        transform: rotateX($rotation-side) translateY(-$cube-size-half)\n            translateZ(-$cube-size-half);\n    }\n}\n\n// animation of cube rotation and fade in at the same time\n// scale cube from the very small to the normal size\n// use 3d animations to animate all three axis (x, y, z)\n@keyframes cube-rotate-fade-in {\n    0% {\n        transform: rotate3d(1, 1, 1, 0deg) scale3d(0, 0, 0);\n    }\n\n    100% {\n        transform: rotate3d(1, 1, 1, 360deg) scale3d(1, 1, 1);\n    }\n}\n\n// animate each side of cube with opacity to slowly show cube\n@keyframes cube-side-opacity {\n    0% {\n        opacity: 0;\n    }\n\n    100% {\n        opacity: 0.5;\n    }\n}\n","@use \"./components/App/App\";\n@use \"./components/Loader/Loader\";\n@use \"./components/LoadingScreen/LoadingScreen\";\n@use \"./components/Cube/Cube\";\n\nbody {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\n        \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n        \"Helvetica Neue\", sans-serif;\n}\n"],"names":[],"sourceRoot":""}